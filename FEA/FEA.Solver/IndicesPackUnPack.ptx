	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with /usr/lib/nvidia-cuda-toolkit/lib//be
	// nvopencc 4.1 built on 2013-07-17

	//-----------------------------------------------------------
	// Compiling /tmp/tmpxft_0000370d_00000000-9_IndicesPackUnPack.cpp3.i (/tmp/ccBI#.DNoHJT)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"<command-line>"
	.file	2	"/usr/include/stdc-predef.h"
	.file	3	"/tmp/tmpxft_0000370d_00000000-8_IndicesPackUnPack.cudafe2.gpu"
	.file	4	"/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
	.file	5	"/usr/include/crt/device_runtime.h"
	.file	6	"/usr/include/host_defines.h"
	.file	7	"/usr/include/builtin_types.h"
	.file	8	"/usr/include/device_types.h"
	.file	9	"/usr/include/driver_types.h"
	.file	10	"/usr/include/surface_types.h"
	.file	11	"/usr/include/texture_types.h"
	.file	12	"/usr/include/vector_types.h"
	.file	13	"/usr/include/device_launch_parameters.h"
	.file	14	"/usr/include/crt/storage_class.h"
	.file	15	"IndicesPackUnPack.cu"
	.file	16	"/usr/include/common_functions.h"
	.file	17	"/usr/include/math_functions.h"
	.file	18	"/usr/include/math_constants.h"
	.file	19	"/usr/include/device_functions.h"
	.file	20	"/usr/include/sm_11_atomic_functions.h"
	.file	21	"/usr/include/sm_12_atomic_functions.h"
	.file	22	"/usr/include/sm_13_double_functions.h"
	.file	23	"/usr/include/sm_20_atomic_functions.h"
	.file	24	"/usr/include/sm_32_atomic_functions.h"
	.file	25	"/usr/include/sm_35_atomic_functions.h"
	.file	26	"/usr/include/sm_20_intrinsics.h"
	.file	27	"/usr/include/sm_30_intrinsics.h"
	.file	28	"/usr/include/sm_32_intrinsics.h"
	.file	29	"/usr/include/sm_35_intrinsics.h"
	.file	30	"/usr/include/surface_functions.h"
	.file	31	"/usr/include/texture_fetch_functions.h"
	.file	32	"/usr/include/texture_indirect_functions.h"
	.file	33	"/usr/include/surface_indirect_functions.h"
	.file	34	"/usr/include/math_functions_dbl_ptx1.h"


	.entry IndicesPack (
		.param .u32 __cudaparm_IndicesPack_NodesPerElement,
		.param .u32 __cudaparm_IndicesPack_NumElements,
		.param .u64 __cudaparm_IndicesPack_MeshNodes,
		.param .u64 __cudaparm_IndicesPack_MatrixEntries)
	{
	.reg .u16 %rh<7>;
	.reg .u32 %r<28>;
	.reg .u64 %rd<17>;
	.reg .pred %p<6>;
	.loc	15	12	0
$LDWbegin_IndicesPack:
	mov.u16 	%rh1, %ntid.x;
	mov.u16 	%rh2, %ctaid.x;
	mul.wide.u16 	%r1, %rh2, %rh1;
	mov.u16 	%rh3, %ctaid.y;
	mov.u16 	%rh4, %ntid.y;
	mul.wide.u16 	%r2, %rh3, %rh4;
	mov.u16 	%rh5, %nctaid.x;
	mul.wide.u16 	%r3, %rh5, %rh1;
	cvt.u32.u16 	%r4, %tid.x;
	add.u32 	%r5, %r4, %r1;
	cvt.u32.u16 	%r6, %tid.y;
	add.u32 	%r7, %r6, %r2;
	add.u32 	%r8, %r5, %r7;
	add.u32 	%r9, %r3, %r8;
	ld.param.u32 	%r10, [__cudaparm_IndicesPack_NumElements];
	setp.le.u32 	%p1, %r10, %r9;
	@%p1 bra 	$Lt_0_3074;
	ld.param.u32 	%r11, [__cudaparm_IndicesPack_NodesPerElement];
	mov.u32 	%r12, 0;
	setp.eq.u32 	%p2, %r11, %r12;
	@%p2 bra 	$Lt_0_3586;
	ld.param.u32 	%r11, [__cudaparm_IndicesPack_NodesPerElement];
	mul.lo.u32 	%r13, %r9, %r11;
	mul.lo.u32 	%r14, %r13, %r11;
	mov.s32 	%r15, %r11;
	add.u32 	%r16, %r13, %r11;
	mov.s32 	%r17, %r13;
	ld.param.u64 	%rd1, [__cudaparm_IndicesPack_MatrixEntries];
	ld.param.u64 	%rd2, [__cudaparm_IndicesPack_MeshNodes];
	mov.u32 	%r18, 0;
	mov.u32 	%r19, 0;
	mov.s32 	%r20, %r15;
$Lt_0_4098:
 //<loop> Loop body line 12, nesting depth: 1, estimated iterations: unknown
	ld.param.u32 	%r11, [__cudaparm_IndicesPack_NodesPerElement];
	mov.s32 	%r21, %r11;
	mov.s32 	%r22, %r13;
	add.u32 	%r23, %r14, %r19;
	cvt.u64.u32 	%rd3, %r17;
	mul.wide.u32 	%rd4, %r17, 4;
	ld.param.u64 	%rd2, [__cudaparm_IndicesPack_MeshNodes];
	add.u64 	%rd5, %rd2, %rd4;
	mov.s32 	%r24, %r21;
$Lt_0_4866:
 //<loop> Loop body line 12, nesting depth: 2, estimated iterations: unknown
	.loc	15	24	0
	cvt.u64.u32 	%rd6, %r22;
	mul.wide.u32 	%rd7, %r22, 4;
	.loc	15	12	0
	ld.param.u64 	%rd2, [__cudaparm_IndicesPack_MeshNodes];
	.loc	15	24	0
	add.u64 	%rd8, %rd2, %rd7;
	ld.global.u32 	%r25, [%rd8+0];
	cvt.u64.u32 	%rd9, %r25;
	ld.global.u32 	%r26, [%rd5+0];
	cvt.u64.u32 	%rd10, %r26;
	shl.b64 	%rd11, %rd10, 32;
	or.b64 	%rd12, %rd9, %rd11;
	cvt.u64.u32 	%rd13, %r23;
	mul.wide.u32 	%rd14, %r23, 8;
	.loc	15	12	0
	ld.param.u64 	%rd1, [__cudaparm_IndicesPack_MatrixEntries];
	.loc	15	24	0
	add.u64 	%rd15, %rd1, %rd14;
	st.global.u64 	[%rd15+0], %rd12;
	.loc	15	25	0
	add.u32 	%r19, %r19, 1;
	add.u32 	%r23, %r23, 1;
	add.u32 	%r22, %r22, 1;
	setp.ne.u32 	%p3, %r22, %r16;
	@%p3 bra 	$Lt_0_4866;
	add.u32 	%r18, %r18, 1;
	add.u32 	%r17, %r17, 1;
	.loc	15	12	0
	ld.param.u32 	%r11, [__cudaparm_IndicesPack_NodesPerElement];
	.loc	15	25	0
	setp.ne.u32 	%p4, %r11, %r18;
	@%p4 bra 	$Lt_0_4098;
$Lt_0_3586:
$Lt_0_3074:
	.loc	15	29	0
	exit;
$LDWend_IndicesPack:
	} // IndicesPack

	.entry IndicesUnpack (
		.param .u64 __cudaparm_IndicesUnpack_MatrixEntries,
		.param .u64 __cudaparm_IndicesUnpack_MatrixLength,
		.param .u64 __cudaparm_IndicesUnpack_Rows,
		.param .u64 __cudaparm_IndicesUnpack_Cols)
	{
	.reg .u16 %rh<7>;
	.reg .u32 %r<13>;
	.reg .u64 %rd<15>;
	.reg .pred %p<3>;
	.loc	15	31	0
$LDWbegin_IndicesUnpack:
	mov.u16 	%rh1, %ntid.x;
	mov.u16 	%rh2, %ctaid.x;
	mul.wide.u16 	%r1, %rh2, %rh1;
	mov.u16 	%rh3, %ctaid.y;
	mov.u16 	%rh4, %ntid.y;
	mul.wide.u16 	%r2, %rh3, %rh4;
	mov.u16 	%rh5, %nctaid.x;
	mul.wide.u16 	%r3, %rh5, %rh1;
	cvt.u32.u16 	%r4, %tid.x;
	add.u32 	%r5, %r4, %r1;
	cvt.u32.u16 	%r6, %tid.y;
	add.u32 	%r7, %r6, %r2;
	add.u32 	%r8, %r5, %r7;
	add.u32 	%r9, %r3, %r8;
	cvt.u64.u32 	%rd1, %r9;
	ld.param.u64 	%rd2, [__cudaparm_IndicesUnpack_MatrixLength];
	setp.le.u64 	%p1, %rd2, %rd1;
	@%p1 bra 	$Lt_1_1026;
	.loc	15	38	0
	mul.lo.u64 	%rd3, %rd1, 4;
	ld.param.u64 	%rd4, [__cudaparm_IndicesUnpack_MatrixEntries];
	mul.lo.u64 	%rd5, %rd1, 8;
	add.u64 	%rd6, %rd4, %rd5;
	ld.global.u64 	%rd7, [%rd6+0];
	shr.u64 	%rd8, %rd7, 32;
	cvt.u32.u64 	%r10, %rd8;
	ld.param.u64 	%rd9, [__cudaparm_IndicesUnpack_Rows];
	add.u64 	%rd10, %rd9, %rd3;
	st.global.u32 	[%rd10+0], %r10;
	.loc	15	41	0
	ld.global.u64 	%rd11, [%rd6+0];
	cvt.u32.u64 	%r11, %rd11;
	ld.param.u64 	%rd12, [__cudaparm_IndicesUnpack_Cols];
	add.u64 	%rd13, %rd12, %rd3;
	st.global.u32 	[%rd13+0], %r11;
$Lt_1_1026:
	.loc	15	44	0
	exit;
$LDWend_IndicesUnpack:
	} // IndicesUnpack

